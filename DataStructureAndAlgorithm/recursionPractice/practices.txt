1.
Q:
Given a string, compute recursively (no loops) the number of times lowercase "hi" appears in the string.
countHi("xxhixx") → 1
countHi("xhixhix") → 2
countHi("hi") → 1
A:
public int countHi(String str) {
  if(str.length()<=1)
    return 0;
  else if(str.substring(0,2).equals("hi"))
    return 1+countHi(str.substring(2));
  else{
    return countHi(str.substring(1));
  }
}

2.
Q:

Given a string, compute recursively (no loops) a new string where all the lowercase 'x' chars have been changed to 'y' chars.


changeXY("codex") → "codey"
changeXY("xxhixx") → "yyhiyy"
changeXY("xhixhix") → "yhiyhiy"
A:
public String changeXY(String str) {
  if(str.length()>=1){
    if(str.charAt(0)=='x'){
      return "y"+changeXY(str.substring(1));

    }
    else{
      return str.substring(0,1)+changeXY(str.substring(1));
    }
  }
  else
    return "";
}

3.
Q:

Given a string, compute recursively (no loops) a new string where all appearances of "pi" have been replaced by "3.14".


changePi("xpix") → "x3.14x"
changePi("pipi") → "3.143.14"
changePi("pip") → "3.14p"
A:
public String changePi(String str) {
  if(str.length()<=1)
    return str;
  else if(str.substring(0,2).equals("pi")){
    return 3.14+changePi(str.substring(2));
  }
  else{
    return str.substring(0,1)+changePi(str.substring(1));
  }
}

4.
Q:

Given a string, compute recursively a new string where all the 'x' chars have been removed.


noX("xaxb") → "ab"
noX("abc") → "abc"
noX("xx") → ""
A:
public String noX(String str) {
  if(str.length()!=0){
    if(str.substring(0,1).equals("x"))
      return noX(str.substring(1));
    else
      return str.substring(0,1)+noX(str.substring(1));
  }
  else return "";
}

5.
Q:

A:
