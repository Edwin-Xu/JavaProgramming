用可变长度的二维数组来实现：  这个和实现杨辉三角差不多
public class Yanghui
{   public static void main(String args[ ] )
     {    int n = 10;
           int mat[ ][ ] = new int [n ][ ];   //申请第一维的存储空间
           int i, j;
           for ( i = 0; i < n; i++)
           {   mat[i] = new int [i+1];   //申请第二维的存储空间 ，每次长度不同
                mat[i][0] = 1;     mat[i][i] = 1;
                for ( j = 1;j < i; j++)
                      mat[i][j] = mat[i-1][j-1] + mat[i-1][j];
            }
           for ( i = 0; i< mat.length; i++)
           {    for ( j = 0; j < n-i; j++) System.out.print(“   “);
                 for ( j = 0; j < mat[i].length; j++)
                       System.out.print(“   “ + mat[i][j]);
                 System.out.println( );
           }
     }}




//冒泡排序
 2     public static ListNode bubbleSort(ListNode head){
 3         if(head == null || head.next == null)  //链表为空或者仅有单个结点
 4             return head;
 5
 6         ListNode cur = null, tail = null;
 7
 8         cur = head;
 9
10         while(cur.next != tail){
11             while(cur.next != tail){
12                 if(cur.val > cur.next.val){
13                     int tmp = cur.val;
14                     cur.val = cur.next.val;
15                     cur.next.val = tmp;
16                 }
17                 cur = cur.next;
18             }
19
20             tail = cur;  //下一次遍历的尾结点是当前结点(仔细琢磨一下里面的道道)
21             cur = head;     //遍历起始结点重置为头结点
22         }
23
24         return head;
25
26
27     }