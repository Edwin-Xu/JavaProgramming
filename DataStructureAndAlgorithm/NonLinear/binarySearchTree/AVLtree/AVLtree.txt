AVL tree:  高度平衡的二叉搜索树

优点：降低树的高度，减少平均搜索长度，从而提高了搜索树的效率

concept：左子树右子树都是avl树，且二者的高度差绝对值小于等于1

节点平衡因子(balance factor) bf =  右子树高度  -  左子树高度
            （0，-1，1）



插入- 不平衡--平衡化旋转：

                                         |-左单旋转：\ ， 以中节点为新的父节点
        |-单旋转（三个节点处于一条直线）- |
        |                                |-右单旋转：/,   以中节点为新的父节点
平衡化旋转）
        |                                |-先左后右双旋转：<   --->   /\
        |-双旋转（三个节点处于一条折线）- |
                                         |-先右后左双旋转: >   --->   /\


特点：
    1.如果一个 N 节点的AVL树，其高度可以保持在 O(log2(N))， ASL 也保持在O(Log2(N))；
    2.有 N 个节点的AVL树高度不超过 h
    3.插入： O(h)
      删除：O(log2(N))